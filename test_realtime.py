#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–µ–∞–ª—Ç–∞–π–º–∞ CRSF API
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
"""

import requests
import time
import json

def test_realtime_speed():
    base_url = "http://localhost:8080"
    
    print("‚ö° –¢–µ—Å—Ç —Ä–µ–∞–ª—Ç–∞–π–º–∞ CRSF API")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
    start_time = time.time()
    timestamps = []
    
    print("üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞–∂–¥—ã–µ 50–º—Å (20 –ì—Ü)...")
    print("‚è±Ô∏è  –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
    
    for i in range(20):  # 20 –∑–∞–ø—Ä–æ—Å–æ–≤ = 1 —Å–µ–∫—É–Ω–¥–∞
        try:
            response = requests.get(f"{base_url}/api/telemetry", timeout=1)
            if response.status_code == 200:
                data = response.json()
                current_time = time.time()
                elapsed = (current_time - start_time) * 1000  # –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
                timestamps.append(elapsed)
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                print(f"  {i+1:2d}: {elapsed:6.1f}–º—Å - {data['timestamp']}")
                
                # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                time.sleep(0.05)  # 50–º—Å
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            break
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    if len(timestamps) > 1:
        intervals = []
        for i in range(1, len(timestamps)):
            interval = timestamps[i] - timestamps[i-1]
            intervals.append(interval)
        
        avg_interval = sum(intervals) / len(intervals)
        min_interval = min(intervals)
        max_interval = max(intervals)
        
        print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ —Ä–µ–∞–ª—Ç–∞–π–º–∞:")
        print(f"   –°—Ä–µ–¥–Ω–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {avg_interval:.1f}–º—Å")
        print(f"   –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π: {min_interval:.1f}–º—Å")
        print(f"   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π: {max_interval:.1f}–º—Å")
        print(f"   –ß–∞—Å—Ç–æ—Ç–∞: {1000/avg_interval:.1f} –ì—Ü")
        
        # –û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        if avg_interval <= 60:
            print("‚úÖ –û—Ç–ª–∏—á–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ–∞–ª—Ç–∞–π–º–∞!")
        elif avg_interval <= 100:
            print("‚úÖ –•–æ—Ä–æ—à–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ–∞–ª—Ç–∞–π–º–∞")
        else:
            print("‚ö†Ô∏è  –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–æ–∂–µ—Ç –±—ã—Ç—å —É–ª—É—á—à–µ–Ω–∞")
    
    print("\nüéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    test_realtime_speed()
